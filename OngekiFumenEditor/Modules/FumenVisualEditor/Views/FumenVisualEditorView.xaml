<UserControl
    x:Class="OngekiFumenEditor.Modules.FumenVisualEditor.Views.FumenVisualEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cal="http://caliburnmicro.com"
    xmlns:common="clr-namespace:Gemini.Framework.Services;assembly=Gemini"
    xmlns:controls="clr-namespace:OngekiFumenEditor.UI.Controls"
    xmlns:controls1="clr-namespace:OngekiFumenEditor.Modules.FumenVisualEditor.Views.UI"
    xmlns:converters="clr-namespace:OngekiFumenEditor.Modules.FumenVisualEditor.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:opentkcontrol="clr-namespace:OpenTK.Wpf;assembly=GLWpfControl"
    xmlns:valueconverters="clr-namespace:OngekiFumenEditor.UI.ValueConverters"
    xmlns:viewmodels="clr-namespace:OngekiFumenEditor.Modules.FumenVisualEditor.ViewModels"
    cal:Message.Attach="     [Event DragEnter] = [Action Grid_DragEnter($executionContext)];     [Event Drop] = [Action Grid_Drop($executionContext)];     [Event FocusableChanged] = [Action OnFocusableChanged($executionContext)];     [Key Delete] = [Action KeyboardAction_DeleteSelectingObjects];     [Gesture Ctrl+A] = [Action KeyboardAction_SelectAllObjects];     [Key Escape] = [Action KeyboardAction_CancelSelectingObjects];      [Key Q] = [Action KeyboardAction_HideOrShow]; [Gesture Ctrl+C]=[Action MenuItemAction_CopySelectedObjects]; [Gesture Ctrl+V]=[Action MenuItemAction_PasteCopiesObjects];    "
    d:DataContext="{d:DesignInstance Type=viewmodels:FumenVisualEditorViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    AllowDrop="True"
    Background="#101010"
    Focusable="True"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="./EditorObjectDataTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:UnitCloseSizeConverter x:Key="UnitCloseSizeConverter" />
            <converters:JudgeLineConverter x:Key="JudgeLineConverter" />
            <converters:BeatRhythmToBrushConverter x:Key="BeatRhythmToBrushConverter" />
            <converters:TGridDisplayConverter x:Key="TGridDisplayConverter">
            </converters:TGridDisplayConverter>
            <converters:ReverseDoubleConverter x:Key="ReverseDoubleConverter" />
            <converters:BeatRhythmToVisibleConverter x:Key="BeatRhythmToVisibleConverter" />
            <converters:JudgeLineDisplayConverter x:Key="JudgeLineDisplayConverter" />
            <valueconverters:ReverseBoolConverter x:Key="ReverseBoolConverter" />
            <converters:BoolToScrollBarVisibleConverter x:Key="BoolToScrollBarVisibleConverter" />
            <converters:IsStringEmptyConverter x:Key="IsStringEmptyConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Focusable="False">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.ContextMenu>
            <ContextMenu x:Name="EditorContextMenu">
                <MenuItem Header="选取...">
                    <MenuItem cal:Message.Attach="MenuItemAction_SelectAll()" Header="选所有物件" />
                    <MenuItem cal:Message.Attach="MenuItemAction_ReverseSelect()" Header="反向选取所有物件" />
                </MenuItem>
                <MenuItem Header="对选取物件...">
                    <MenuItem cal:Message.Attach="KeyboardAction_DeleteSelectingObjects()" Header="删除" />
                    <MenuItem cal:Message.Attach="MenuItemAction_CopySelectedObjects()" Header="复制可复制的物件" />
                    <MenuItem Header="粘贴...">
                        <MenuItem cal:Message.Attach="MenuItemAction_PasteCopiesObjects()" Header="直接粘贴" />
                        <Separator />
                        <MenuItem cal:Message.Attach="MenuItemAction_PasteCopiesObjectsAsSelectedRangeCenterXGridMirror()" Header="按整体全体范围水平镜像粘贴" />
                        <MenuItem cal:Message.Attach="MenuItemAction_PasteCopiesObjectsAsSelectedRangeCenterTGridMirror()" Header="按整体全体范围垂直镜像粘贴" />
                        <MenuItem cal:Message.Attach="MenuItemAction_PasteCopiesObjectsAsXGridZeroMirror()" Header="按X[0,0]为基准水平镜像粘贴" />
                    </MenuItem>
                    <MenuItem Header="操作时间...">
                        <MenuItem cal:Message.Attach="MenuItemAction_RememberSelectedObjectAudioTime()" Header="记忆音频时间" />
                        <MenuItem cal:Message.Attach="MenuItemAction_RecoverySelectedObjectToAudioTime()" Header="恢复到音频时间" />
                    </MenuItem>
                </MenuItem>
            </ContextMenu>
        </Grid.ContextMenu>
        <opentkcontrol:GLWpfControl
            x:Name="glView"
            cal:Message.Attach="[Event MouseWheel]=[Action OnMouseWheel($executionContext)];           [Event SizeChanged] = [Action OnSizeChanged($executionContext)];             [Event Loaded] = [Action OnLoaded($executionContext)];              [Event ScrollChanged] = [Action ScrollViewer_OnScrollChanged($executionContext)]; [Event PreviewMouseDown] = [Action OnMouseDown($executionContext)];             [Event MouseMove] = [Action OnMouseMove($executionContext)];             [Event MouseLeftButtonUp] = [Action OnMouseUp($executionContext)];             [Event MouseLeave] = [Action OnMouseLeave($executionContext)];"
            Ready="glView_Ready"
            SizeChanged="glView_SizeChanged" />
        <TextBlock
            Grid.Column="0"
            Height="30"
            Margin="0,0,20,0"
            HorizontalAlignment="Right"
            d:Text="500000000000000000"
            Foreground="Yellow"
            IsHitTestVisible="False">
            <TextBlock.Text>
                <MultiBinding Converter="{StaticResource JudgeLineDisplayConverter}">
                    <MultiBinding.Bindings>
                        <Binding Path="." />
                        <Binding Path="Setting.JudgeLineOffsetY" />
                        <Binding Path="MinVisibleCanvasY" />
                    </MultiBinding.Bindings>
                </MultiBinding>
            </TextBlock.Text>
            <TextBlock.RenderTransform>
                <TranslateTransform>
                    <TranslateTransform.Y>
                        <MultiBinding Converter="{StaticResource JudgeLineConverter}" ConverterParameter="0">
                            <MultiBinding.Bindings>
                                <Binding Path="." />
                                <Binding Path="Setting.JudgeLineOffsetY" />
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </TranslateTransform.Y>
                </TranslateTransform>
            </TextBlock.RenderTransform>
        </TextBlock>
        <Rectangle
            Grid.Column="0"
            Height="2"
            IsHitTestVisible="False"
            Stroke="Yellow">
            <Rectangle.RenderTransform>
                <TranslateTransform>
                    <TranslateTransform.Y>
                        <MultiBinding Converter="{StaticResource JudgeLineConverter}">
                            <MultiBinding.Bindings>
                                <Binding Path="." />
                                <Binding Path="Setting.JudgeLineOffsetY" />
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </TranslateTransform.Y>
                </TranslateTransform>
            </Rectangle.RenderTransform>
        </Rectangle>
        <TextBlock
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            FontWeight="Bold"
            Foreground="White"
            Opacity="0.25"
            Text="{Binding DisplayFPS}"
            Visibility="{Binding IsDisplayFPS, Converter={StaticResource BoolToVisibilityConverter}}" />
        <ScrollBar
            Grid.Column="1"
            Maximum="{Binding TotalDurationHeight}"
            Minimum="0"
            Orientation="Vertical"
            ScrollBar.Scroll="ScrollBar_Scroll"
            Visibility="{Binding IsLocked, Converter={StaticResource BoolToScrollBarVisibleConverter}}"
            Value="{Binding ReverseScrollViewerVerticalOffset}">
        </ScrollBar>
        <StackPanel
            Margin="0,0,0,50"
            HorizontalAlignment="Center"
            VerticalAlignment="Bottom"
            IsHitTestVisible="False"
            Orientation="Horizontal">
            <controls1:Toast x:Name="mainToast">

            </controls1:Toast>
        </StackPanel>
    </Grid>
</UserControl>
